name: ðŸ”§ Build main branch and PRs

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  build:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4
    - name: set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle
    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Create local properties
      run: touch local.properties
    - name: Copy mock google services
      run: cp mock-google-services.json app/google-services.json
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    - name: Build with Gradle
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        MAPBOX_DOWNLOADS_TOKEN: ${{ secrets.MAPBOX_DOWNLOADS_TOKEN }}
      run: ./gradlew testDebugUnitTest assembleDebug # sonarqube
    - name: Test Reporter
      uses: dorny/test-reporter@v1.9.1
      if: success() || failure()
      with:
        name: Tests
        path: "**/TEST-*.xml"
        reporter: java-junit

      #    - name: run tests
#      uses: reactivecircus/android-emulator-runner@v2
#      with:
#        api-level: 30
#        arch: x86
#        script: ./gradlew connectedCheck
    - name: Archive apk
      uses: actions/upload-artifact@v4
      with:
        name: apk
        path: |
          app/build/outputs/apk/debug
