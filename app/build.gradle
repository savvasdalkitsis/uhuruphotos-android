plugins {
    id "android.app"
    alias(libs.plugins.about)
    alias(libs.plugins.google.services)

    id 'com.bugsnag.android.gradle'
}

android {
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.compiler.get()
    }
    defaultConfig {
        applicationId "com.savvasdalkitsis.uhuruphotos"
        versionCode 219
        versionName "0.0.219"

        manifestPlaceholders = [
                bugSnagApiKey: System.getenv("BUGSNAG_API_KEY") ?: "DUMMY-KEY",
        ]

        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        release {
            storeFile file("keystore/keystore.jks")
            storePassword System.getenv("KEYSTORE_PASS")
            keyAlias System.getenv("KEYSTORE_ALIAS")
            keyPassword System.getenv("KEYSTORE_PASS")
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            applicationIdSuffix ".debug"
            debuggable true
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            proguardFiles fileTree(dir: "proguards", include: ["*.pro"]).asList().toArray()

            signingConfig signingConfigs.release
        }
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/AL2.0'
            excludes += '/META-INF/LGPL2.1'
            excludes += '/META-INF/versions/*'
        }
    }
    namespace 'com.savvasdalkitsis.uhuruphotos'
}

dependencies {
    implementation(
            libs.accompanist.systemui,
            libs.androidx.activity,
            libs.androidx.compose.material.windowsize,
            libs.androidx.compose.ui,
            libs.androidx.splash,
            libs.bugsnag,
            libs.permissions.base,
            project(":app:implementation"),
            project(":feature:auth:domain:api:module"),
            project(":feature:auth:view:api"),
            project(":feature:download:domain:api"),
            project(":feature:home:view:api"),
            project(":feature:settings:domain:api:module"),
            project(":feature:settings:domain:api:module:ui"),
            project(":foundation:android:api:module"),
            project(":foundation:image:api:module"),
            project(":foundation:log:api:module"),
            project(":foundation:map:api:module"),
            project(":foundation:navigation:api:module"),
            project(":foundation:ui:api:module"),
            project(":foundation:ui:implementation"),
            project(":foundation:video:api:module"),
    )
    debugImplementation(
            libs.leaks,
    )
}