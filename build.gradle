buildscript {
    dependencies {
        classpath libs.hilt.android.gradle.plugin
        classpath libs.sqldelight.gradle.plugin
        classpath libs.google.services
        classpath libs.bugsnag.plugin
    }

}
plugins {
    alias(libs.plugins.moduleGraph)
    alias(libs.plugins.sonarqube)
    alias(libs.plugins.analysis)

    alias(libs.plugins.about) apply false
    alias(libs.plugins.android.app) apply false
    alias(libs.plugins.android.library) apply false
    alias(libs.plugins.google.services) apply false
    alias(libs.plugins.jetbrains.compose) apply false
    alias(libs.plugins.kotlin.android) apply false
    alias(libs.plugins.kotlin.multiplatform) apply false
    alias(libs.plugins.ksp) apply false
    alias(libs.plugins.powerassert) apply false
    alias(libs.plugins.redacted) apply false
    alias(libs.plugins.sqldelight) apply false
}

tasks.register('clean', Delete) {
    delete rootProject.layout.buildDirectory
}

sonarqube {
    properties {
        property "sonar.projectKey", "savvasdalkitsis_uhuruphotos-android"
        property "sonar.organization", "savvasdalkitsis"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

subprojects {

    if (displayName == "project ':konsist'") {
        return
    }
    if ((
            displayName.startsWith("project ':feature") ||
            displayName.startsWith("project ':foundation")
    ) && !(
            displayName.endsWith(":api'") ||
            displayName.endsWith(":implementation'")
    )) {
        return
    }
    if (displayName in [
            "project ':foundation:compose:api'",
            "project ':foundation:coroutines:api'",
            "project ':foundation:biometrics:api'",
            "project ':foundation:dismiss:api'",
            "project ':foundation:exif:api'",
            "project ':foundation:group:api'",
            "project ':foundation:icons:api'",
            "project ':foundation:lang:api'",
            "project ':foundation:launchers:api'",
            "project ':foundation:log:api'",
            "project ':foundation:math:api'",
            "project ':foundation:result:api'",
            "project ':foundation:seam:api'",
            "project ':foundation:share:api'",
            "project ':foundation:strings:api'",
            "project ':foundation:system:api'",
            "project ':foundation:theme:api'",
            "project ':foundation:toaster:api'",
    ]) {
        apply plugin: libs.plugins.kotlin.multiplatform.get().pluginId
    } else {
        apply plugin: libs.plugins.kotlin.android.get().pluginId
    }
    if (name == "app") {
        apply plugin: libs.plugins.android.app.get().pluginId
    } else {
        apply plugin: libs.plugins.android.library.get().pluginId
    }
    apply plugin: libs.plugins.powerassert.get().pluginId
    apply plugin: libs.plugins.redacted.get().pluginId
    apply plugin: libs.plugins.ksp.get().pluginId

    android {
        compileSdk 36

        defaultConfig {
            minSdk 24
            targetSdk 36
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_23
            targetCompatibility JavaVersion.VERSION_23
        }
    }
    kotlin {
        jvmToolchain(23)
    }

    dependencies {
        ksp libs.hilt.dagger.compiler
        ksp libs.androidx.hilt.compiler
    }
}