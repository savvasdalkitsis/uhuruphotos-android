import org.jetbrains.kotlin.gradle.dsl.KotlinVersion
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    dependencies {
        classpath libs.sqldelight.gradle.plugin
        classpath libs.google.services
        classpath libs.bugsnag.plugin
    }

}
plugins {
    alias(libs.plugins.moduleGraph)
    alias(libs.plugins.sonarqube)
    alias(libs.plugins.analysis)

    alias(libs.plugins.about) apply false
    alias(libs.plugins.android.app) apply false
    alias(libs.plugins.android.library) apply false
    alias(libs.plugins.compose) apply false
    alias(libs.plugins.google.services) apply false
    alias(libs.plugins.kotlin.android) apply false
    alias(libs.plugins.kotlin.multiplatform) apply false
    alias(libs.plugins.ksp) apply false
    alias(libs.plugins.powerassert) apply false
    alias(libs.plugins.redacted) apply false
    alias(libs.plugins.sqldelight) apply false
}

sonarqube {
    properties {
        property "sonar.projectKey", "savvasdalkitsis_uhuruphotos-android"
        property "sonar.organization", "savvasdalkitsis"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

subprojects {
    apply plugin: libs.plugins.powerassert.get().pluginId
    apply plugin: libs.plugins.redacted.get().pluginId
    apply plugin: libs.plugins.ksp.get().pluginId

    tasks.register('allDeps', DependencyReportTask) {}

    tasks.withType(KotlinCompile).configureEach {
        compilerOptions {
            languageVersion = KotlinVersion.KOTLIN_1_9
            freeCompilerArgs.addAll(
                    "-opt-in=androidx.compose.animation.ExperimentalAnimationApi",
                    "-opt-in=androidx.compose.animation.graphics.ExperimentalAnimationGraphicsApi",
                    "-opt-in=androidx.compose.foundation.ExperimentalFoundationApi",
                    "-opt-in=androidx.compose.foundation.layout.ExperimentalLayoutApi",
                    "-opt-in=androidx.compose.material.ExperimentalMaterialApi",
                    "-opt-in=androidx.compose.material3.windowsizeclass.ExperimentalMaterial3WindowSizeClassApi",
                    "-opt-in=androidx.compose.ui.ExperimentalComposeUiApi",
                    "-opt-in=androidx.media3.common.util.UnstableApi",
                    "-opt-in=coil.annotation.ExperimentalCoilApi",
                    "-opt-in=com.google.accompanist.permissions.ExperimentalPermissionsApi",
                    "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
                    "-opt-in=kotlinx.coroutines.FlowPreview",
                    "-opt-in=kotlinx.ExperimentalStdlibApi",
                    "-opt-in=kotlin.ExperimentalStdlibApi",
                    "-Xcontext-receivers",
                    "-Xexpect-actual-classes",
            )
        }
    }

    configurations.configureEach {
        exclude group: "androidx.constraintlayout", module: "constraintlayout-compose"
    }
}